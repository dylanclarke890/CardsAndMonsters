@inject IPhaseService _phaseService
@implements IDisposable

@if (Show)
{
    <div class="absolutely">
        <div class="scroll-left">
            <p class="mb-0">@Phase.ToString().ToUpper() PHASE... </p>
        </div>
    </div>
}

@code {
    private Phase Phase;
    private int AnimationDuration;
    private bool Show;

    protected override void OnInitialized()
    {
        _phaseService.OnShow += (len, phase) =>
        {
            Phase = phase;
            AnimationDuration = len;
            Show = true;
            StateHasChanged();
        };
        _phaseService.OnHide += () =>
        {
            Show = false;
            StateHasChanged();
        };
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        foreach (var parameter in parameters)
        {
            switch (parameter.Name)
            {
                case nameof(Phase):
                    Phase = (Phase)parameter.Value;
                    break;
                default:
                    throw new ArgumentException($"Unknown parameter: {parameter.Name}");
            }
        }

        return base.SetParametersAsync(ParameterView.Empty);
    }

    public void Dispose()
    {
        _phaseService.OnShow -= (len, phase) =>
        {
            Phase = phase;
            AnimationDuration = len;
            Show = true;
        };
        _phaseService.OnHide -= () =>
        {
            Show = false;
            StateHasChanged();
        };
    }
}
<style>
    .absolutely {
        position: absolute;
        z-index: 1000;
        top: 46vh;
        width: 100%;
    }

    .scroll-left {
        height: 5em;
        overflow: hidden;
        position: relative;
        background: rgba(173, 216, 230, 0.6);
        border: 16px black;
        color: white;
        border: 1px solid black;
        font-family: 'Bangers', cursive;
    }

        .scroll-left p {
            position: absolute;
            top:-0.12em;
            width: 100%;
            height: 100%;
            margin: 0;
            text-align: center;
            font-size:4em;
            /* Starting position */
            transform: translateX(-100%);
            /* Apply animation to this element */
            animation: scroll-left @(AnimationDuration)s linear infinite;
        }
    /* Move it (define the animation) */
    @@keyframes scroll-left {
        0% {
            transform: translateX(-100%);
        }

        100% {
            transform: translateX(100%);
        }
    }
</style>

