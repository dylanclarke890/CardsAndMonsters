<div class="d-flex justify-content-center">
    @foreach (var card in Cards)
    {
        if (!HideInfo)
        {
            if (card.IsType(typeof(Monster)))
            {
                <MonsterCard Monster="(Monster)card" OnMonsterPlayed="PlayCard"/>
                <span class="mx-2">&nbsp;</span>
            }
            else
            {
                <p>Dunno</p>
            }
        }
        else
        {
            <Card WithImage />
        }
    }
</div>

@code {
    [Parameter]
    public IList<BaseCard> Cards { get; set; }

    [Parameter]
    public bool HideInfo { get; set; }

    [Parameter]
    public EventCallback<BaseCard> CardPlayed { get; set; }

    private async Task PlayCard(BaseCard card)
    {
        await CardPlayed.InvokeAsync(card);
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        foreach (var parameter in parameters)
        {
            switch (parameter.Name)
            {
                case nameof(Cards):
                    Cards = (IList<BaseCard>)parameter.Value;
                    break;
                case nameof(HideInfo):
                    HideInfo = (bool)parameter.Value;
                    break;
                case nameof(CardPlayed):
                    CardPlayed = (EventCallback<BaseCard>)parameter.Value;
                    break;
                default:
                    throw new ArgumentException($"Unknown parameter: {parameter.Name}");
            }
        }

        return base.SetParametersAsync(ParameterView.Empty);
    }
}
