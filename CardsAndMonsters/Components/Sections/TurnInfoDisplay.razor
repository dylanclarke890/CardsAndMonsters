@inject IGameService _gameService
@inject IPhaseService _phaseService
@implements IDisposable

<div class="info-panel">
    <p>@(Board.TurnCount + 1)</p>
    <p>@Board.CurrentTurn.Phase</p>
    @if (Board.Player.Equals(Board.CurrentTurn.Duelist) && !_phaseService.ChangingPhase)
    {
        @if (Board.CurrentTurn.Phase < Phase.Battle && Board.TurnCount > 0)
        {
            <button class="btn btn-outline-primary button-size" @onclick="() => _gameService.EnterPhase(Phase.Battle)">BATTLE</button>
        }
        <button class="btn btn-outline-primary button-size" @onclick="() => _gameService.EndTurn()">END</button>
    }
</div>
@code {
    [Parameter]
    public Board Board { get; set; }

    protected override void OnInitialized()
    {
        _gameService.OnAction += StateHasChanged;
    }

    public void Dispose()
    {
        _gameService.OnAction -= StateHasChanged;
    }
}
